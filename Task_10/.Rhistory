setwd("/Users/taylorsexton/Desktop/Evolution/Tasks/Task_10")
x <- rnorm(100, mean=0, sd=2)
y <- (x * 5)+ 2 + runif(100, min=0, max=0,1)
y <- (x * 5)+ 2 + runif(100, min=0, max=0.1)
y <- (x * 5)+ 2 + runif(100, min=0, max=0.1) *100
model <- lm(y~x)
summary(model)
slope <- coef(model)[2]
intercept <- coef(model)[1]
cat("SLope estimate", slope, "\n")
cat("Y-intercept estimate", intercept, "\n")
slopes <- vector(mode= "numeric", length =100)
intercepts <- vector(mode= "numeric", length =100)
multipliers <- vector(mode= "numeric", length=100)
for(i in 1:100){
x<- rnorm(n=100, mean=0, sd=2)
z<- runif(n=1, min=0.5, max=2)
y<- x*z*5+2+runif(n=100, min=0, max=0.1)*100
model <- lm(y~x)
slopes[i]<- coef(model)[2]
intercepts[i] <- coef(model)[1]
multipliers[i] <- z
}
cat("Mean slope estimate:", mean(slope), "\n")
cat("Mean y-intercept estimate:", mean(intercepts), "\n")
cat("Mean multiplier estimate:", mean(multipliers), "\n")
pdf("plot10.pdf")
plot(multipliers, slopes, xlab="Multiplier (z)", ylab= "Slope estimate")
dev.off()
dev.off()
for(i in 1:100){
x<- rnorm(n=100, mean=0, sd=2)
z<- runif(n=1, min=0.5, max=2)
y<- x*z*5+2+runif(n=100, min=0, max=0.1)*100
model <- lm(y~x)
slopes[i]<- coef(model)[2]
intercepts[i] <- coef(model)[1]
multipliers[i] <- z
}
cat("Mean slope estimate:", mean(slope), "\n")
cat("Mean y-intercept estimate:", mean(intercepts), "\n")
cat("Mean multiplier estimate:", mean(multipliers), "\n")
pdf("plot10.pdf")
plot(multipliers, slopes, xlab="Multiplier (z)", ylab= "Slope estimate")
plot(multipliers, slopes, xlab="Multiplier (z)", ylab= "Slope estimate")
library(ggplot2)
df <- data.frame(multiplier= multipliers, slope=slopes)
setwd('~/Users/taylorsexton/Desktop/Evolution/Tasks/Task_10')
x <- rnorm(n = 100, mean = 0, sd = 2)
x
y <- x*5+2+runif(100, min = 0, max = 0.1)
y
model <- lm(y~x)
plot(model)
x <- rnorm(100, mean = 0, sd = 2)
z[i] <- runif(1, min = 0.5, max = 2)
y <- x*5+2+runif(100, min = 0, max = 0.1)
linearmodel <- lm(y~x)
intercept[i] <- coef(linearmodel)[1]*z[i]+2
slope[i] <- coef(linearmodel)[2]*z[i]
}
plot(z, slope, xlab = "Z Estimated Slope")
setwd('~/Users/taylorsexton/Desktop/Evolution/Tasks/Task_10')
x <- rnorm(n = 100, mean = 0, sd = 2)
x
y <- x*5+2+runif(100, min = 0, max = 0.1)
y
model <- lm(y~x)
plot(model)
x <- rnorm(100, mean = 0, sd = 2)
z[i] <- runif(1, min = 0.5, max = 2)
y <- x*5+2+runif(100, min = 0, max = 0.1)
linearmodel <- lm(y~x)
intercept[i] <- coef(linearmodel)[1]*z[i]+2
slope[i] <- coef(linearmodel)[2]*z[i]
}
dev.off()
x <- rnorm(n = 100, mean = 0, sd = 2)
x
y <- x*5+2+runif(100, min = 0, max = 0.1)
y
model <- lm(y~x)
summary(model)
plot(model)
x <- rnorm(100, mean = 0, sd = 2)
z[i] <- runif(1, min = 0.5, max = 2)
y <- x*5+2+runif(100, min = 0, max = 0.1)
model <- lm(y~x)
intercept[i] <- coef(model)[1]*z[i]+2
slope[i] <- coef(model)[2]*z[i]
}
plot(z, slope, xlab = "Z Estimated Slope")
x <- rnorm(n = 100, mean = 0, sd = 2)
x
y <- x*5+2+runif(100, min = 0, max = 0.1)
y
model <- lm(y~x)
slope <- vector("numeric", 100)
intercept <- vector("numeric", 100)
z <- vector("numeric", 100)
for (i in 1:100){
x <- rnorm(100, mean=0, sd=2)
y <- x * 5 + 2 + runif(100, min=0, max=0.1)
z[i] <- runif(1, min=0.5, max=2)
model <- lm(y~x)
intercept[i] <- coef(model)[1]*z[i]+2
slope[i] <- coef(model)[2]*z[i]
}
plot(z, slope, xlab = "Z Estimated Slope")
for (i in 1:100){
x <- rnorm(100, mean=0, sd=2)
y <- x * 5 + 2 + runif(100, min=0, max=0.1)
z[i] <- runif(1, min=0.5, max=2)
model <- lm(y~x)
intercept[i] <- coef(model)[1]*z[i]+2
slope[i] <- coef(model)[2]*z[i]
}
plot(z, slope, xlab = "Z Estimated Slope")
abline(lm(slope~z), col = "purple")
x <- rnorm(n = 100, mean = 0, sd = 2)
x
y <- x*5+2+runif(100, min = 0, max = 0.1)
y
linmodel <- lm(y~x)
plot(linmodel)
x <- rnorm(100, mean = 0, sd = 2)
z[i] <- runif(1, min = 0.5, max = 2)
y <- x*5+2+runif(100, min = 0, max = 0.1)
linearmodel <- lm(y~x)
intercept[i] <- coef(linearmodel)[1]*z[i]+2
slope[i] <- coef(linearmodel)[2]*z[i]
}
for (i in 1:100){
x <- rnorm(100, mean = 0, sd = 2)
z[i] <- runif(1, min = 0.5, max = 2)
y <- x*5+2+runif(100, min = 0, max = 0.1)
linearmodel <- lm(y~x)
intercept[i] <- coef(linearmodel)[1]*z[i]+2
slope[i] <- coef(linearmodel)[2]*z[i]
}
abline(lm(slope~z), col = "red")
dev.off()
plot(z, slope, xlab = "Z Estimated Slope")
abline(lm(slope~z), col = "red")
plot(z, slope, xlab = "Z Estimated Slope")
abline(lm(slope~z), col = "purple")
#Extra Credit 1
n <- 10000
prize <- sample(c("1", "2", "3"), size = n, replace = TRUE)
opened_door <- ifelse(prize == "1", sample(c("2", "3"), size = n, replace = TRUE), ifelse(prize == "2", "3", "2"))
closed_door <- ifelse(opened_door == "2", "3", "2")
same_door <- sum(prize =="1")/n
diff_door <- sum(prize == closed_door)/n
win_frequency <- c(same_door, diff_door)
barplot(win_frequency, names.arg = c("Same Door", "Different Door"), ylab ="Frequency of Wins (10,000 Runs)", ylim = c(0, 0.8), main = "Chance of Winning the Grand Prize", col = "turquoise")
#Extra Credit 2
image <- https://cdn.pixabay.com/photo/2022/03/18/23/05/horse-7077606_1280.jpg
#Extra Credit 2
image <- "https://cdn.pixabay.com/photo/2022/03/18/23/05/horse-7077606_1280.jpg"
image
meme(image)
#Extra Credit 2
library(meme)
meme(image)
meme(image, "Dr. Mitchell when he grades my exam")
meme(image, "Dr. Mitchell when he grades my exam", size=30)
meme(image, "Dr. Mitchell when he grades my exam", size=0.5)
meme(image, "Dr. Mitchell when he grades my exam", size=2)
u <- "https://pyxis.nymag.com/v1/imgs/2e7/5d7/73e020f56c4a86221823bc32113b4316d2-25-ben-affleck-sad-smoke.w710.jpg"
k<- "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.thecut.com%2F2016%2F08%2Fben-affleck-smoking-through-the-pain-of-existence.html&psig=AOvVaw1hvPo9Uj-pc1qh0haU2DC1&ust=1682689914477000&source=images&cd=vfe&ved=0CBAQjRxqFwoTCNDAusaayv4CFQAAAAAdAAAAABAE"
meme(k, "", "Me after taking one of Dr. Mitchell's exams")
meme(k, "Me after taking one of Dr. Mitchell's exams")
k <- "https://pyxis.nymag.com/v1/imgs/2e7/5d7/73e020f56c4a86221823bc32113b4316d2-25-ben-affleck-sad-smoke.2x.rvertical.w330.jpg"
meme(k, "Me after taking one of Dr. Mitchell's exams")
meme(k, "Me after taking one of Dr. Mitchell's exams", size=3)
library(meme)
image <- "https://cdn.pixabay.com/photo/2022/03/18/23/05/horse-7077606_1280.jpg"
meme(image, "Dr. Mitchell when he grades my exam", size=2)
library(meme)
image <- "https://cdn.pixabay.com/photo/2022/03/18/23/05/horse-7077606_1280.jpg"
meme(image, "Dr. Mitchell when he grades my exam", size=2)
