install.packages("swirl")
library(swirl)
library(swirl)
swirl()
5 +7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2+100
my_sqrt <- z-1
my_sqrt <- sqrt(z-1)
?
num [1:3] 0.316, 2.828, 1.463
num[1:3] 0.316, 2.828, 1.463
swirl()
library(swirl)
swirl()
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+ c(0,10)
c(1,2,3,4)+ c(0,10,100)
z * 2+100
(z * 2 + 100)
(z * 2 + 100)
z * 2+100
info()
skip()
my_div
swirl()
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
# 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
library(swirl)
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
swril()
swirl()
5+7
x <- 5+7
x
y<- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
(z*2+1000)
z*2+1000
my_div
1
swirl()
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
taylorsexton1
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
TaylorSexton1
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
taylorsexton1
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
library(swirl)
swirl()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args()
?list.files
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
library(swirl)
swirl()
arg(list.files)
arg(list.files())
args(list.files())
args(list.files)
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
old.dir <- getwd()
old.dir <- getwd()
testdir <_ dir.create()
testdir <- dir.create()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R, mytest2.R")
file.rename(mytest.R,mytest2.R)
file.rename("mytest.R,mytest2.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest3.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)')
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)')
dir.create(file.path("testdir2","testdir3"), recursive=TRUE)')
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
dir.create(file.path('testdir2', 'testdir3), recursive=TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
setwd(old.dir)
1:20
pi
pi:10
15:1
:
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my-seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each=10)
num_vect(0.5,55,-10,6)
num_vect <-c(0.5,55,-10,6)
tf<- num_vect <1
tf
num_vect >=6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse="")
paste(my_char, collapse=" ")
c(my_char, "Taylor")
my_name <- c(my_char, "Taylor")
my_name
paste(my_name, collapse= " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="_")
paste(LETTERS, 1:4, sep= "-")
x<- c(44,NA,5,NA)
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my.data)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[x(-2,-20)]
x[x(-2,-10)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf= NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patients","age","weight","bp","rating","test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5 != 7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(>7)
which(ints>7)
any(<0)
any(ints<0)
all(ints >0)
Sys.Date()
mean(c(2,4,5))
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
x
x}
x
submit()
x
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
submit()
swirl()
submit()
boring_function <- function(x)
submit()
boring_function <- function(x) {
x
}
swirl()
boring_function <- function(x) {
x
}
submit()
boring_function <- function(x) {
x
}
submit()
submit()
boring_function('My first function!')
boring_function('My first function!')
boring_function()
boring_function
my_mean <- function(my_vector) {
sum(my_vector)/ lenght(my_vector)
}
submit()
my_mean <- function(my_vector) {
sum(my_vector)/ sum(my_vector)
}
submit()
my_mean <- function(my_vector) {
sum(my_vector)/ length(my_vector)
}
my_mean <- function(my_vector) {
length(my_vector)/sum(my_vector)
}
submit()
my_mean <- function(my_vector) {
sum(my_vector)/lenght(my_vector)
}
submit()
my_mean <- function(my_vector) {
sum(my_vector)/length(my_vector)
}
submit()
my_mean <- function(my_vector) {
# Write your code here!
# Remember: the last expression evaluated will be returned!
sum(my_vector)/length(my_vector)
}
submit()
my_mean <- function(my_vector) {
# Write your code here!
mean(my_vector)
# Remember: the last expression evaluated will be returned!
}
submit()
submit()
my_mean(c(4,5,10))
remainder <- function(num, divisor=2) {
# Write your code here!
num %% divisor
# Remember: the last expression evaluated will be returned!
}
submit()
remainder(5)
remainder(11,5)
remainder(divisor=1, num=5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
telegram <- function(...){
paste("START", ..., "STOP", sep=" ")
}
submit()
telegram("taylor")
telegram("taylor")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
submit()
swirl()
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
submit()
swirl()
submit()
submit()
mad_libs("school", "angry", "security systems")
submit
submit()
submit()
'I' %p% 'love'%p% "R!"
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
source("~/Desktop/Evolution/Tasks/Task_01/task01.r")
